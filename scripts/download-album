#! /usr/bin/env python

import argparse
import getpass
import logging
import os
from pathvalidate import sanitize_filepath
from plexapi import utils
from plexapi.myplex import MyPlexAccount
from tqdm import tqdm


from plex_toolbox import cli


def main(config):
    if not config.password:
        password = getpass.getpass("Password: ")
    else:
        password = config.password
    logging.info(f"Connecting to {config.username}@{config.server}")
    account = MyPlexAccount(config.username, password)
    plex = account.resource(config.server).connect()

    # if no playlists/albums will select the first and only
    playlists = [pl for pl in plex.playlists() if pl.isPhoto]
    playlist = utils.choose("\nChoose Playlist", playlists, lambda pl: "%s" % pl.title)

    if not config.output_dir:
        output_dir = os.getcwd()
    else:
        output_dir = os.path.expanduser(config.output_dir)
    output_dir = os.path.join(output_dir, sanitize_filepath(playlist.title))
    logging.info(f"Saving images in {output_dir}")

    for photo in tqdm(playlist.items(), desc="Downloading images", unit="img"):
        photo_media_part = photo.media[0].parts[0]
        filename = os.path.basename(photo_media_part.file)
        logging.debug(f"Downloading {filename} ...")
        url = plex.url(f"{photo_media_part.key}?download=1")
        output_path = os.path.join(output_dir, filename)
        if os.path.exists(output_path):
            logging.debug(f"{output_path} already exists, skipping ...")
            continue

        utils.download(
            url,
            account._token,
            filename,
            savepath=output_dir,
            session=photo._server._session,
        )


if __name__ == "__main__":
    parser = argparse.ArgumentParser("download-album")
    parser = cli.add_server_args(parser)
    parser.add_argument(
        "-o",
        "--output-dir",
        default=None,
        help="Path to store the album in. Defaults to the album name in the current working directory.",
    )
    args = parser.parse_args()
    main(config=args)
